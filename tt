const express = require('express');
const bodyParser = require('body-parser');
const axios = require('axios'); // Import Axios for making HTTP requests

const app = express();
const port = process.env.PORT || 3000;

// Middleware
app.use(bodyParser.json());

// Function to fetch data from external API
const fetchData = async () => {
    try {
        const response = await axios.get('URL_OF_EXTERNAL_API'); // Replace URL_OF_EXTERNAL_API with the actual API URL
        return response.data;
    } catch (error) {
        console.error("Error fetching data:", error);
        throw error;
    }
};

// POST endpoint to handle the array data
app.post('/bfhl', async (req, res) => {
    try {
        // Fetch data from external API
        const apiData = await fetchData();

        // Extract the array from the API response
        const data = apiData.data;

        // Mock user data
        const user = {
            user_id: "john_doe_17091999",
            email: "john@xyz.com",
            roll_number: "ABCD123"
        };

        // Logic to separate even numbers, odd numbers, and alphabets
        const evenNumbers = data.filter(num => num % 2 === 0 && !isNaN(num));
        const oddNumbers = data.filter(num => num % 2 !== 0 && !isNaN(num));
        const alphabets = data.filter(item => isNaN(item)).map(item => item.toUpperCase());

        // Construct response
        const response = {
            is_success: true,
            user_id: user.user_id,
            email: user.email,
            roll_number: user.roll_number,
            even_numbers: evenNumbers,
            odd_numbers: oddNumbers,
            alphabets: alphabets
        };

        res.json(response);
    } catch (error) {
        console.error("Error:", error);
        res.status(500).json({ is_success: false, error: "Internal server error" });
    }
});

// Start the server
app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});
