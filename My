To accomplish this task, you can follow these steps:

Set up a REST API using Node.js.
Define a POST endpoint (/bfhl) to handle incoming requests.
Parse the incoming array from the request body.
Implement the logic to separate even numbers, odd numbers, and alphabets.
Return the response in the specified format, including the user ID, email ID, and roll number.
Host the API on a platform like Heroku.
Test the API with sample requests to ensure it functions as expected.
Submit the API endpoint URL through the provided form.
Here's an example of how you can implement this in Node.js:



const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = process.env.PORT || 3000;

// Middleware
app.use(bodyParser.json());

// POST endpoint to handle the array data
app.post('/bfhl', (req, res) => {
    try {
        const { data } = req.body;

        // Mock user data
        const user = {
            user_id: "john_doe_17091999",
            email: "john@xyz.com",
            roll_number: "ABCD123"
        };

        // Logic to separate even numbers, odd numbers, and alphabets
        const evenNumbers = data.filter(num => num % 2 === 0 && !isNaN(num));
        const oddNumbers = data.filter(num => num % 2 !== 0 && !isNaN(num));
        const alphabets = data.filter(item => isNaN(item)).map(item => item.toUpperCase());

        // Construct response
        const response = {
            is_success: true,
            user_id: user.user_id,
            email: user.email,
            roll_number: user.roll_number,
            even_numbers: evenNumbers,
            odd_numbers: oddNumbers,
            alphabets: alphabets
        };

        res.json(response);
    } catch (error) {
        console.error("Error:", error);
        res.status(500).json({ is_success: false, error: "Internal server error" });
    }
});

// Start the server
app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});
